!function() {
    function r(r, o) {
        var f = void 0;
        r > o && (f = r, r = o, o = f), f = o, f *= o, f += o, f >>= 1, k[f += r] = 1;
    }
    function o(o, f) {
        var e = void 0;
        for (b[o + S * f] = 1, e = -2; e < 2; e++) b[o + e + S * (f - 2)] = 1, b[o - 2 + S * (f + e + 1)] = 1, 
        b[o + 2 + S * (f + e)] = 1, b[o + e + 1 + S * (f + 2)] = 1;
        for (e = 0; e < 2; e++) r(o - 1, f + e), r(o + 1, f - e), r(o - e, f - 1), r(o + e, f + 1);
    }
    function f(r) {
        for (;r >= 255; ) r = ((r -= 255) >> 8) + (255 & r);
        return r;
    }
    function e(r, o, e, i) {
        var t = void 0, a = void 0, v = void 0;
        for (t = 0; t < i; t++) C[e + t] = 0;
        for (t = 0; t < o; t++) {
            if (255 != (v = u[C[r + t] ^ C[e]])) for (a = 1; a < i; a++) C[e + a - 1] = C[e + a] ^ h[f(v + A[i - a])]; else for (a = e; a < e + i; a++) C[a] = C[a + 1];
            C[e + i - 1] = 255 == v ? 0 : h[f(v + A[0])];
        }
    }
    function i(r, o) {
        var f = void 0;
        return r > o && (f = r, r = o, o = f), f = o, f += o * o, f >>= 1, f += r, k[f];
    }
    function t(r) {
        var o = void 0, f = void 0, e = void 0, t = void 0;
        switch (r) {
          case 0:
            for (f = 0; f < S; f++) for (o = 0; o < S; o++) o + f & 1 || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 1:
            for (f = 0; f < S; f++) for (o = 0; o < S; o++) 1 & f || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 2:
            for (f = 0; f < S; f++) for (e = 0, o = 0; o < S; o++, e++) 3 == e && (e = 0), e || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 3:
            for (t = 0, f = 0; f < S; f++, t++) for (3 == t && (t = 0), e = t, o = 0; o < S; o++, 
            e++) 3 == e && (e = 0), e || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 4:
            for (f = 0; f < S; f++) for (e = 0, t = f >> 1 & 1, o = 0; o < S; o++, e++) 3 == e && (e = 0, 
            t = !t), t || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 5:
            for (t = 0, f = 0; f < S; f++, t++) for (3 == t && (t = 0), e = 0, o = 0; o < S; o++, 
            e++) 3 == e && (e = 0), (o & f & 1) + !(!e | !t) || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 6:
            for (t = 0, f = 0; f < S; f++, t++) for (3 == t && (t = 0), e = 0, o = 0; o < S; o++, 
            e++) 3 == e && (e = 0), (o & f & 1) + (e && e == t) & 1 || i(o, f) || (b[o + f * S] ^= 1);
            break;

          case 7:
            for (t = 0, f = 0; f < S; f++, t++) for (3 == t && (t = 0), e = 0, o = 0; o < S; o++, 
            e++) 3 == e && (e = 0), (e && e == t) + (o + f & 1) & 1 || i(o, f) || (b[o + f * S] ^= 1);
        }
    }
    function a(r) {
        var o = void 0, f = 0;
        for (o = 0; o <= r; o++) m[o] >= 5 && (f += M + m[o] - 5);
        for (o = 3; o < r - 1; o += 2) m[o - 2] == m[o + 2] && m[o + 2] == m[o - 1] && m[o - 1] == m[o + 1] && 3 * m[o - 1] == m[o] && (0 == m[o - 3] || o + 3 > r || 3 * m[o - 3] >= 4 * m[o] || 3 * m[o + 3] >= 4 * m[o]) && (f += _);
        return f;
    }
    function v() {
        var r = void 0, o = void 0, f = void 0, e = void 0, i = void 0, t = 0, v = 0;
        for (o = 0; o < S - 1; o++) for (r = 0; r < S - 1; r++) (b[r + S * o] && b[r + 1 + S * o] && b[r + S * (o + 1)] && b[r + 1 + S * (o + 1)] || !(b[r + S * o] || b[r + 1 + S * o] || b[r + S * (o + 1)] || b[r + 1 + S * (o + 1)])) && (t += y);
        for (o = 0; o < S; o++) {
            for (m[0] = 0, f = e = r = 0; r < S; r++) (i = b[r + S * o]) == e ? m[f]++ : m[++f] = 1, 
            v += (e = i) ? 1 : -1;
            t += a(f);
        }
        v < 0 && (v = -v);
        var n = v, d = 0;
        for (n += n << 2, n <<= 1; n > S * S; ) n -= S * S, d++;
        for (t += d * N, r = 0; r < S; r++) {
            for (m[0] = 0, f = e = o = 0; o < S; o++) (i = b[r + S * o]) == e ? m[f]++ : m[++f] = 1, 
            e = i;
            t += a(f);
        }
        return t;
    }
    function n(a) {
        var n = void 0, m = void 0, M = void 0, y = void 0, _ = void 0, N = void 0, Q = void 0, j = void 0;
        y = a.length, w = 0;
        do {
            if (w++, M = 4 * (x - 1) + 16 * (w - 1), z = l[M++], F = l[M++], R = l[M++], p = l[M], 
            M = R * (z + F) + F - 3 + (w <= 9), y <= M) break;
        } while (w < 40);
        for (S = 17 + 4 * w, _ = R + (R + p) * (z + F) + F, y = 0; y < _; y++) g[y] = 0;
        for (C = a.slice(0), y = 0; y < S * S; y++) b[y] = 0;
        for (y = 0; y < (S * (S + 1) + 1) / 2; y++) k[y] = 0;
        for (y = 0; y < 3; y++) {
            for (M = 0, m = 0, 1 == y && (M = S - 7), 2 == y && (m = S - 7), b[m + 3 + S * (M + 3)] = 1, 
            n = 0; n < 6; n++) b[m + n + S * M] = 1, b[m + S * (M + n + 1)] = 1, b[m + 6 + S * (M + n)] = 1, 
            b[m + n + 1 + S * (M + 6)] = 1;
            for (n = 1; n < 5; n++) r(m + n, M + 1), r(m + 1, M + n + 1), r(m + 5, M + n), r(m + n + 1, M + 5);
            for (n = 2; n < 4; n++) b[m + n + S * (M + 2)] = 1, b[m + 2 + S * (M + n + 1)] = 1, 
            b[m + 4 + S * (M + n)] = 1, b[m + n + 1 + S * (M + 4)] = 1;
        }
        if (w > 1) for (y = d[w], m = S - 7; ;) {
            for (n = S - 7; n > y - 3 && (o(n, m), !(n < y)); ) n -= y;
            if (m <= y + 9) break;
            o(6, m -= y), o(m, 6);
        }
        for (b[8 + S * (S - 8)] = 1, m = 0; m < 7; m++) r(7, m), r(S - 8, m), r(7, m + S - 7);
        for (n = 0; n < 8; n++) r(n, 7), r(n + S - 8, 7), r(n, S - 8);
        for (n = 0; n < 9; n++) r(n, 8);
        for (n = 0; n < 8; n++) r(n + S - 8, 8), r(8, n);
        for (m = 0; m < 7; m++) r(8, m + S - 7);
        for (n = 0; n < S - 14; n++) 1 & n ? (r(8 + n, 6), r(6, 8 + n)) : (b[8 + n + 6 * S] = 1, 
        b[6 + S * (8 + n)] = 1);
        if (w > 6) for (y = c[w - 7], M = 17, n = 0; n < 6; n++) for (m = 0; m < 3; m++, 
        M--) 1 & (M > 11 ? w >> M - 12 : y >> M) ? (b[5 - n + S * (2 - m + S - 11)] = 1, 
        b[2 - m + S - 11 + S * (5 - n)] = 1) : (r(5 - n, 2 - m + S - 11), r(2 - m + S - 11, 5 - n));
        for (m = 0; m < S; m++) for (n = 0; n <= m; n++) b[n + S * m] && r(n, m);
        for (_ = C.length, N = 0; N < _; N++) g[N] = C.charCodeAt(N);
        if (C = g.slice(0), n = R * (z + F) + F, _ >= n - 2 && (_ = n - 2, w > 9 && _--), 
        N = _, w > 9) {
            for (C[N + 2] = 0, C[N + 3] = 0; N--; ) y = C[N], C[N + 3] |= 255 & y << 4, C[N + 2] = y >> 4;
            C[2] |= 255 & _ << 4, C[1] = _ >> 4, C[0] = 64 | _ >> 12;
        } else {
            for (C[N + 1] = 0, C[N + 2] = 0; N--; ) y = C[N], C[N + 2] |= 255 & y << 4, C[N + 1] = y >> 4;
            C[1] |= 255 & _ << 4, C[0] = 64 | _ >> 4;
        }
        for (N = _ + 3 - (w < 10); N < n; ) C[N++] = 236, C[N++] = 17;
        for (A[0] = 1, N = 0; N < p; N++) {
            for (A[N + 1] = 1, Q = N; Q > 0; Q--) A[Q] = A[Q] ? A[Q - 1] ^ h[f(u[A[Q]] + N)] : A[Q - 1];
            A[0] = h[f(u[A[0]] + N)];
        }
        for (N = 0; N <= p; N++) A[N] = u[A[N]];
        for (M = n, m = 0, N = 0; N < z; N++) e(m, R, M, p), m += R, M += p;
        for (N = 0; N < F; N++) e(m, R + 1, M, p), m += R + 1, M += p;
        for (m = 0, N = 0; N < R; N++) {
            for (Q = 0; Q < z; Q++) g[m++] = C[N + Q * R];
            for (Q = 0; Q < F; Q++) g[m++] = C[z * R + N + Q * (R + 1)];
        }
        for (Q = 0; Q < F; Q++) g[m++] = C[z * R + N + Q * (R + 1)];
        for (N = 0; N < p; N++) for (Q = 0; Q < z + F; Q++) g[m++] = C[n + N + Q * p];
        for (C = g, n = m = S - 1, M = _ = 1, j = (R + p) * (z + F) + F, N = 0; N < j; N++) for (y = C[N], 
        Q = 0; Q < 8; Q++, y <<= 1) {
            128 & y && (b[n + S * m] = 1);
            do {
                _ ? n-- : (n++, M ? 0 != m ? m-- : (M = !M, 6 == (n -= 2) && (n--, m = 9)) : m != S - 1 ? m++ : (M = !M, 
                6 == (n -= 2) && (n--, m -= 8))), _ = !_;
            } while (i(n, m));
        }
        for (C = b.slice(0), y = 0, m = 3e4, M = 0; M < 8 && (t(M), (n = v()) < m && (m = n, 
        y = M), 7 != y); M++) b = C.slice(0);
        for (y != M && t(y), m = s[y + (x - 1 << 3)], M = 0; M < 8; M++, m >>= 1) 1 & m && (b[S - 1 - M + 8 * S] = 1, 
        M < 6 ? b[8 + S * M] = 1 : b[8 + S * (M + 1)] = 1);
        for (M = 0; M < 7; M++, m >>= 1) 1 & m && (b[8 + S * (S - 7 + M)] = 1, M ? b[6 - M + 8 * S] = 1 : b[7 + 8 * S] = 1);
        return b;
    }
    var d = [ 0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28 ], c = [ 3220, 1468, 2713, 1235, 3062, 1890, 2119, 1549, 2344, 2936, 1117, 2583, 1330, 2470, 1667, 2249, 2028, 3780, 481, 4011, 142, 3098, 831, 3445, 592, 2517, 1776, 2234, 1951, 2827, 1070, 2660, 1345, 3177 ], s = [ 30660, 29427, 32170, 30877, 26159, 25368, 27713, 26998, 21522, 20773, 24188, 23371, 17913, 16590, 20375, 19104, 13663, 12392, 16177, 14854, 9396, 8579, 11994, 11245, 5769, 5054, 7399, 6608, 1890, 597, 3340, 2107 ], l = [ 1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30 ], u = [ 255, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, 224, 14, 52, 141, 239, 129, 28, 193, 105, 248, 200, 8, 76, 113, 5, 138, 101, 47, 225, 36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125, 106, 39, 249, 185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, 253, 226, 152, 37, 179, 16, 145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210, 19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72, 126, 110, 107, 58, 40, 84, 250, 133, 186, 61, 202, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115, 243, 167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197, 254, 24, 227, 165, 153, 119, 38, 184, 180, 124, 17, 68, 146, 217, 35, 32, 137, 46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, 151, 178, 220, 252, 190, 97, 242, 86, 211, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31, 45, 67, 216, 183, 123, 164, 118, 196, 23, 73, 236, 127, 12, 111, 246, 108, 161, 59, 82, 41, 157, 85, 170, 251, 96, 134, 177, 187, 204, 62, 90, 203, 89, 95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174, 213, 233, 230, 231, 173, 232, 116, 214, 244, 234, 168, 80, 88, 175 ], h = [ 1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152, 45, 90, 180, 117, 234, 201, 143, 3, 6, 12, 24, 48, 96, 192, 157, 39, 78, 156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5, 10, 20, 40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97, 194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60, 120, 240, 253, 231, 211, 187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175, 67, 134, 17, 34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62, 124, 248, 237, 199, 147, 59, 118, 236, 197, 151, 51, 102, 204, 133, 23, 46, 92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41, 82, 164, 85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99, 198, 145, 63, 126, 252, 229, 215, 179, 123, 246, 241, 255, 227, 219, 171, 75, 150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200, 141, 7, 14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242, 249, 239, 195, 155, 43, 86, 172, 69, 138, 9, 18, 36, 72, 144, 61, 122, 244, 245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207, 131, 27, 54, 108, 216, 173, 71, 142, 0 ], C = [], g = [], b = [], k = [], m = [], w = void 0, S = void 0, z = void 0, F = void 0, R = void 0, p = void 0, x = 2, A = [], M = 3, y = 3, _ = 40, N = 10, Q = null, j = {
        get ecclevel() {
            return x;
        },
        set ecclevel(r) {
            x = r;
        },
        get size() {
            return _size;
        },
        set size(r) {
            _size = r;
        },
        get canvas() {
            return Q;
        },
        set canvas(r) {
            Q = r;
        },
        getFrame: function(r) {
            return n(r);
        },
        utf16to8: function(r) {
            var o = void 0, f = void 0, e = void 0, i = void 0;
            for (o = "", e = r.length, f = 0; f < e; f++) (i = r.charCodeAt(f)) >= 1 && i <= 127 ? o += r.charAt(f) : i > 2047 ? (o += String.fromCharCode(224 | i >> 12 & 15), 
            o += String.fromCharCode(128 | i >> 6 & 63), o += String.fromCharCode(128 | i >> 0 & 63)) : (o += String.fromCharCode(192 | i >> 6 & 31), 
            o += String.fromCharCode(128 | i >> 0 & 63));
            return o;
        },
        draw: function(r, o, f, e, i, t) {
            var a = this;
            if (x = t || x, o = o || Q) {
                var v = Math.min(f, e);
                r = a.utf16to8(r);
                var n = a.getFrame(r), d = wx.createCanvasContext(o, i), c = Math.round(v / (S + 8)), s = c * (S + 8), l = Math.floor((v - s) / 2);
                v = s, d.clearRect(0, 0, f, f), d.setFillStyle("#ffffff"), d.fillRect(0, 0, f, f), 
                d.setFillStyle("#000000");
                for (var u = 0; u < S; u++) for (var h = 0; h < S; h++) n[h * S + u] && d.fillRect(c * (4 + u) + l, c * (4 + h) + l, c, c);
                d.draw();
            } else console.warn("No canvas provided to draw QR code in!");
        }
    };
    module.exports = {
        api: j
    };
}();